name: '$(date:yyyyMMdd)$(rev:.r)'
trigger: none
variables:
- group: 'GenLite-VariableGroup'

- name: ACRRegistry
  value: 'acrgenlintepocsbx.azurecr.io'
- name: keyVaultName
  value: 'kv-genlintepocsbx'
- name: resourceGroup
  value: 'rg-genlintepocsbx'
- name: AppServiceName
  value: 'app-genliteidt-core'
- name: identityName
  value: 'id-genlintepocsbx'
- name: genlitekeyvaulturi
  value: 'https://kv-genlintepocsbx.vault.azure.net/'
- name: genlitecloudprovider
  value: 'azure'
- name: azureSubscription
  value: 'Genlite-azr-sbx'
- name: genlitebaseuri
  value: 'https://genlite-poc-sbx.accenture.com'
- name: tenantId
  value: '03164ae1-2b86-407c-aa4a-b4756235cbe4'
- name: storageAccountName
  value: 'stgactgenlintepocsbxgen'
- name: StorageContainerName
  value: 'genlitecore'

jobs:
  - job: Job_1
    displayName: Agent job 1
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self
        fetchDepth: 1
      - task: AzurePowerShell@5
        inputs:
          azureSubscription: $(azureSubscription)
          ScriptType: InlineScript
          Inline: >
            $ACRrepo = "$(Build.Repository.Name)".ToLower()

            ##ClientID of MI

            $ManagedIdentity = (Get-AzUserAssignedIdentity -ResourceGroupName
            $(resourceGroup) -Name $(identityName)).ClientId


            #Keyvault URL

            $keyVaultUrl = (Get-AzKeyVault -VaultName $(keyVaultName)
            -ResourceGroupName $(resourceGroup)).VaultUri


            Write-Host "##vso[task.setvariable
            variable=genlitekeyvaulturi]$keyVaultUrl"


            Write-Host "##vso[task.setvariable
            variable=genliteusermanagedidentity]$ManagedIdentity"


            Write-Host "##vso[task.setvariable variable=ACRrepo]$ACRrepo"
          azurePowerShellVersion: LatestVersion
      - task: qetza.replacetokens.replacetokens-task.replacetokens@5
        displayName: Replace tokens in **/app.json
        inputs:
          targetFiles: '**/app.json'
      - task: qetza.replacetokens.replacetokens-task.replacetokens@5
        displayName: Replace tokens in **/.env
        inputs:
          targetFiles: '**/.env'
      - task: qetza.replacetokens.replacetokens-task.replacetokens@5
        displayName: Replace tokens in **/config.yaml
        inputs:
          targetFiles: '**/bpmtree/util/config.yaml'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            # Write your commands here
      
            sudo cat $(System.DefaultWorkingDirectory)/bpmtree/util/config.yaml
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            sudo rm -rf $(System.DefaultWorkingDirectory)/.git         
            sudo ls -lrta $(System.DefaultWorkingDirectory)         
            sudo docker system df
            sudo docker builder prune -f
            sudo docker system df
      - task: Bash@3
        displayName: DockerBuild
        inputs:
          targetType: inline
          script: |
            docker build -t $(ACRRegistry)/$(ACRrepo):$(Build.BuildId) .
      - task: Bash@3
        displayName: DockerPush
        inputs:
          targetType: inline
          script: |
            docker login $(ACRRegistry) -u $(username) -p $(ACRPassword)

            docker push $(ACRRegistry)/$(ACRrepo):$(Build.BuildId)
      - task: Bash@3
        displayName: Deploy
        inputs:
          targetType: inline
          script: >

            az login --service-principal -t $(tenantId) -u $(clientId) -p
            $(clientSecret) #az acr login --name $(username) --expose-token
            --resource-group $(resourceGroup)

            az webapp stop --name $(AppServiceName) --resource-group
            $(resourceGroup)

            az webapp config container set -n $(AppServiceName) --resource-group
            $(resourceGroup) --docker-custom-image-name
            $(ACRRegistry)/$(ACRrepo):$(Build.BuildId)
            --docker-registry-server-url $(ACRRegistry)

            az webapp start --name $(AppServiceName) --resource-group
            $(resourceGroup)
